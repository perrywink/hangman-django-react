openapi: 3.0.3
info:
  title: Hangman API
  version: 1.0.0
  description: API for Audacix Hangman Game
paths:
  /api/game/{id}/:
    get:
      operationId: game_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - game
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /api/game/{id}/guess/:
    put:
      operationId: game_guess_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameGuess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GameGuess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GameGuess'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /api/game/new/:
    post:
      operationId: game_new_create
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameId'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GameId'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GameId'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameId'
          description: ''
  /api/games/:
    get:
      operationId: games_list
      tags:
      - games
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
          description: ''
components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        word_state:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        incorrect_guesses_made:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        incorrect_guesses_left:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - word_state
    GameGuess:
      type: object
      properties:
        guess:
          type: string
          description: A single character guess
          maxLength: 1
          minLength: 1
      required:
      - guess
    GameId:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    StatusEnum:
      enum:
      - InProgress
      - Loss
      - Won
      type: string
      description: |-
        * `InProgress` - In Progress
        * `Loss` - Loss
        * `Won` - Won
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
